<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.InsightPrep.domain.post.mapper.CommentMapper">

    <insert id="insertComment" parameterType="comment">
        <selectKey keyProperty="id" resultType="long" order="AFTER">
            SELECT currval(pg_get_serial_sequence('comment','id'))
        </selectKey>
        INSERT INTO comment (created_at, updated_at, content, member_id, post_id)
        VALUES (NOW(), NOW(), #{content}, #{member.id}, #{sharedPost.id})
    </insert>

    <resultMap id="CommentMap" type="comment">
        <id property="id" column="id"/>
        <result property="content" column="content"/>
    </resultMap>

    <select id="findById" parameterType="long" resultMap="CommentMap">
        SELECT c.id, c.content, c.member_id, c.post_id
        FROM comment c
        WHERE c.id = #{id}
    </select>

    <select id="findRowById" parameterType="long"
            resultType="com.project.InsightPrep.domain.post.dto.CommentResponse$CommentRow">
        SELECT c.id,
               c.post_id   AS postId,
               c.member_id AS memberId,
               c.content   AS content
        FROM comment c
        WHERE c.id = #{id}
    </select>

    <update id="updateContent">
        UPDATE comment
        SET content = #{content},
            updated_at = NOW()
        WHERE id = #{id}
          AND member_id = #{memberId}
    </update>

    <delete id="deleteByIdAndMember">
        DELETE FROM comment
        WHERE id = #{id}
          AND member_id = #{memberId}
    </delete>

    <select id="findByPostPaged"
            resultMap="CommentListItemMap">
        SELECT
            c.id         AS commentId,
            m.id         AS authorId,
            m.nickname   AS authorNickname,
            c.content    AS content,
            c.created_at AS createdAt
        FROM comment c
                 JOIN member m ON m.id = c.member_id
        WHERE c.post_id = #{postId}
        ORDER BY c.created_at ASC, c.id ASC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <resultMap id="CommentListItemMap"
               type="com.project.InsightPrep.domain.post.dto.CommentResponse$CommentListItem">
        <result property="commentId"      column="commentId"/>
        <result property="authorId"       column="authorId"/>
        <result property="authorNickname" column="authorNickname"/>
        <result property="content"        column="content"/>
        <result property="createdAt"      column="createdAt"/>
    </resultMap>

    <select id="countByPost" resultType="long">
        SELECT COUNT(*) FROM comment WHERE post_id = #{postId}
    </select>

</mapper>